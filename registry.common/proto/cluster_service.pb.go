// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.6.1
// source: cluster_service.proto

package proto

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransferStatus int32

const (
	TransferStatus_Transitioning TransferStatus = 0
	TransferStatus_Completed     TransferStatus = 1
)

// Enum value maps for TransferStatus.
var (
	TransferStatus_name = map[int32]string{
		0: "Transitioning",
		1: "Completed",
	}
	TransferStatus_value = map[string]int32{
		"Transitioning": 0,
		"Completed":     1,
	}
)

func (x TransferStatus) Enum() *TransferStatus {
	p := new(TransferStatus)
	*p = x
	return p
}

func (x TransferStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransferStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_cluster_service_proto_enumTypes[0].Descriptor()
}

func (TransferStatus) Type() protoreflect.EnumType {
	return &file_cluster_service_proto_enumTypes[0]
}

func (x TransferStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransferStatus.Descriptor instead.
func (TransferStatus) EnumDescriptor() ([]byte, []int) {
	return file_cluster_service_proto_rawDescGZIP(), []int{0}
}

type StartupMode int32

const (
	StartupMode_StandAlone StartupMode = 0
	StartupMode_Cluster    StartupMode = 1
)

// Enum value maps for StartupMode.
var (
	StartupMode_name = map[int32]string{
		0: "StandAlone",
		1: "Cluster",
	}
	StartupMode_value = map[string]int32{
		"StandAlone": 0,
		"Cluster":    1,
	}
)

func (x StartupMode) Enum() *StartupMode {
	p := new(StartupMode)
	*p = x
	return p
}

func (x StartupMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StartupMode) Descriptor() protoreflect.EnumDescriptor {
	return file_cluster_service_proto_enumTypes[1].Descriptor()
}

func (StartupMode) Type() protoreflect.EnumType {
	return &file_cluster_service_proto_enumTypes[1]
}

func (x StartupMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StartupMode.Descriptor instead.
func (StartupMode) EnumDescriptor() ([]byte, []int) {
	return file_cluster_service_proto_rawDescGZIP(), []int{1}
}

type RequestType int32

const (
	RequestType_Unknown              RequestType = 0
	RequestType_Register             RequestType = 1
	RequestType_Heartbeat            RequestType = 2
	RequestType_SubService           RequestType = 3
	RequestType_FetchServiceInstance RequestType = 4
)

// Enum value maps for RequestType.
var (
	RequestType_name = map[int32]string{
		0: "Unknown",
		1: "Register",
		2: "Heartbeat",
		3: "SubService",
		4: "FetchServiceInstance",
	}
	RequestType_value = map[string]int32{
		"Unknown":              0,
		"Register":             1,
		"Heartbeat":            2,
		"SubService":           3,
		"FetchServiceInstance": 4,
	}
)

func (x RequestType) Enum() *RequestType {
	p := new(RequestType)
	*p = x
	return p
}

func (x RequestType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestType) Descriptor() protoreflect.EnumDescriptor {
	return file_cluster_service_proto_enumTypes[2].Descriptor()
}

func (RequestType) Type() protoreflect.EnumType {
	return &file_cluster_service_proto_enumTypes[2]
}

func (x RequestType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestType.Descriptor instead.
func (RequestType) EnumDescriptor() ([]byte, []int) {
	return file_cluster_service_proto_rawDescGZIP(), []int{2}
}

type ClusterState int32

const (
	ClusterState_NONE_STATE   ClusterState = 0
	ClusterState_INITIALIZING ClusterState = 1
	// Active The cluster is active and can be read and written to
	ClusterState_ACTIVE ClusterState = 2
	// Transitioning The cluster is transitioning to a new state
	// In this process, the cluster will resize the data shards, just
	// processes read requests and rejects write requests
	ClusterState_TRANSITIONING ClusterState = 3
	ClusterState_DOWN          ClusterState = 4
	// StandBy The cluster is in a standby state and can only be read
	// It's possible that the cluster is electing a leader
	ClusterState_STANDBY ClusterState = 5
	// Maintenance The cluster is in a maintenance state and cannot be read or written
	ClusterState_MAINTENANCE ClusterState = 6
	ClusterState_UNKNOWN     ClusterState = 7
)

// Enum value maps for ClusterState.
var (
	ClusterState_name = map[int32]string{
		0: "NONE_STATE",
		1: "INITIALIZING",
		2: "ACTIVE",
		3: "TRANSITIONING",
		4: "DOWN",
		5: "STANDBY",
		6: "MAINTENANCE",
		7: "UNKNOWN",
	}
	ClusterState_value = map[string]int32{
		"NONE_STATE":    0,
		"INITIALIZING":  1,
		"ACTIVE":        2,
		"TRANSITIONING": 3,
		"DOWN":          4,
		"STANDBY":       5,
		"MAINTENANCE":   6,
		"UNKNOWN":       7,
	}
)

func (x ClusterState) Enum() *ClusterState {
	p := new(ClusterState)
	*p = x
	return p
}

func (x ClusterState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClusterState) Descriptor() protoreflect.EnumDescriptor {
	return file_cluster_service_proto_enumTypes[3].Descriptor()
}

func (ClusterState) Type() protoreflect.EnumType {
	return &file_cluster_service_proto_enumTypes[3]
}

func (x ClusterState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClusterState.Descriptor instead.
func (ClusterState) EnumDescriptor() ([]byte, []int) {
	return file_cluster_service_proto_rawDescGZIP(), []int{3}
}

type ForwardCliResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorType ErrorType `protobuf:"varint,1,opt,name=errorType,proto3,enum=ErrorType" json:"errorType,omitempty"`
	ClusterId uint64    `protobuf:"varint,2,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	LeaderId  string    `protobuf:"bytes,3,opt,name=leaderId,proto3" json:"leaderId,omitempty"`
	Term      uint64    `protobuf:"varint,4,opt,name=term,proto3" json:"term,omitempty"`
	Payload   []byte    `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *ForwardCliResponse) Reset() {
	*x = ForwardCliResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForwardCliResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardCliResponse) ProtoMessage() {}

func (x *ForwardCliResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardCliResponse.ProtoReflect.Descriptor instead.
func (*ForwardCliResponse) Descriptor() ([]byte, []int) {
	return file_cluster_service_proto_rawDescGZIP(), []int{0}
}

func (x *ForwardCliResponse) GetErrorType() ErrorType {
	if x != nil {
		return x.ErrorType
	}
	return ErrorType_None
}

func (x *ForwardCliResponse) GetClusterId() uint64 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *ForwardCliResponse) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *ForwardCliResponse) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *ForwardCliResponse) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type ForwardCliRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId   uint64      `protobuf:"varint,1,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	LeaderId    string      `protobuf:"bytes,2,opt,name=leaderId,proto3" json:"leaderId,omitempty"`
	Term        uint64      `protobuf:"varint,3,opt,name=term,proto3" json:"term,omitempty"`
	RequestType RequestType `protobuf:"varint,4,opt,name=requestType,proto3,enum=RequestType" json:"requestType,omitempty"`
	Payload     []byte      `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
	SyncReplica bool        `protobuf:"varint,6,opt,name=syncReplica,proto3" json:"syncReplica,omitempty"`
}

func (x *ForwardCliRequest) Reset() {
	*x = ForwardCliRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForwardCliRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardCliRequest) ProtoMessage() {}

func (x *ForwardCliRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardCliRequest.ProtoReflect.Descriptor instead.
func (*ForwardCliRequest) Descriptor() ([]byte, []int) {
	return file_cluster_service_proto_rawDescGZIP(), []int{1}
}

func (x *ForwardCliRequest) GetClusterId() uint64 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *ForwardCliRequest) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *ForwardCliRequest) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *ForwardCliRequest) GetRequestType() RequestType {
	if x != nil {
		return x.RequestType
	}
	return RequestType_Unknown
}

func (x *ForwardCliRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ForwardCliRequest) GetSyncReplica() bool {
	if x != nil {
		return x.SyncReplica
	}
	return false
}

type FollowerInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderId string `protobuf:"bytes,1,opt,name=leaderId,proto3" json:"leaderId,omitempty"`
	Term     uint64 `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
}

func (x *FollowerInfoRequest) Reset() {
	*x = FollowerInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowerInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowerInfoRequest) ProtoMessage() {}

func (x *FollowerInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowerInfoRequest.ProtoReflect.Descriptor instead.
func (*FollowerInfoRequest) Descriptor() ([]byte, []int) {
	return file_cluster_service_proto_rawDescGZIP(), []int{2}
}

func (x *FollowerInfoRequest) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *FollowerInfoRequest) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

type FollowerInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorType    ErrorType `protobuf:"varint,1,opt,name=errorType,proto3,enum=ErrorType" json:"errorType,omitempty"`
	LeaderId     string    `protobuf:"bytes,2,opt,name=leaderId,proto3" json:"leaderId,omitempty"`
	Term         uint64    `protobuf:"varint,3,opt,name=term,proto3" json:"term,omitempty"`
	ClusterState string    `protobuf:"bytes,4,opt,name=clusterState,proto3" json:"clusterState,omitempty"`
	NodeId       string    `protobuf:"bytes,5,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	NodeAddr     string    `protobuf:"bytes,6,opt,name=nodeAddr,proto3" json:"nodeAddr,omitempty"`
}

func (x *FollowerInfoResponse) Reset() {
	*x = FollowerInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowerInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowerInfoResponse) ProtoMessage() {}

func (x *FollowerInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowerInfoResponse.ProtoReflect.Descriptor instead.
func (*FollowerInfoResponse) Descriptor() ([]byte, []int) {
	return file_cluster_service_proto_rawDescGZIP(), []int{3}
}

func (x *FollowerInfoResponse) GetErrorType() ErrorType {
	if x != nil {
		return x.ErrorType
	}
	return ErrorType_None
}

func (x *FollowerInfoResponse) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *FollowerInfoResponse) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *FollowerInfoResponse) GetClusterState() string {
	if x != nil {
		return x.ClusterState
	}
	return ""
}

func (x *FollowerInfoResponse) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *FollowerInfoResponse) GetNodeAddr() string {
	if x != nil {
		return x.NodeAddr
	}
	return ""
}

type PublishMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderId string `protobuf:"bytes,1,opt,name=leaderId,proto3" json:"leaderId,omitempty"`
	Term     uint64 `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	MetaData string `protobuf:"bytes,3,opt,name=metaData,proto3" json:"metaData,omitempty"`
}

func (x *PublishMetadataRequest) Reset() {
	*x = PublishMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishMetadataRequest) ProtoMessage() {}

func (x *PublishMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishMetadataRequest.ProtoReflect.Descriptor instead.
func (*PublishMetadataRequest) Descriptor() ([]byte, []int) {
	return file_cluster_service_proto_rawDescGZIP(), []int{4}
}

func (x *PublishMetadataRequest) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *PublishMetadataRequest) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *PublishMetadataRequest) GetMetaData() string {
	if x != nil {
		return x.MetaData
	}
	return ""
}

type TransferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderId string         `protobuf:"bytes,1,opt,name=leaderId,proto3" json:"leaderId,omitempty"`
	Addr     string         `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Term     uint64         `protobuf:"varint,3,opt,name=term,proto3" json:"term,omitempty"`
	Status   TransferStatus `protobuf:"varint,4,opt,name=status,proto3,enum=TransferStatus" json:"status,omitempty"`
}

func (x *TransferRequest) Reset() {
	*x = TransferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferRequest) ProtoMessage() {}

func (x *TransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferRequest.ProtoReflect.Descriptor instead.
func (*TransferRequest) Descriptor() ([]byte, []int) {
	return file_cluster_service_proto_rawDescGZIP(), []int{5}
}

func (x *TransferRequest) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *TransferRequest) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *TransferRequest) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *TransferRequest) GetStatus() TransferStatus {
	if x != nil {
		return x.Status
	}
	return TransferStatus_Transitioning
}

type TransferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorType    ErrorType `protobuf:"varint,1,opt,name=errorType,proto3,enum=ErrorType" json:"errorType,omitempty"`
	ClusterState string    `protobuf:"bytes,2,opt,name=clusterState,proto3" json:"clusterState,omitempty"`
	LeaderId     string    `protobuf:"bytes,3,opt,name=leaderId,proto3" json:"leaderId,omitempty"`
	Term         uint64    `protobuf:"varint,4,opt,name=term,proto3" json:"term,omitempty"`
}

func (x *TransferResponse) Reset() {
	*x = TransferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferResponse) ProtoMessage() {}

func (x *TransferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferResponse.ProtoReflect.Descriptor instead.
func (*TransferResponse) Descriptor() ([]byte, []int) {
	return file_cluster_service_proto_rawDescGZIP(), []int{6}
}

func (x *TransferResponse) GetErrorType() ErrorType {
	if x != nil {
		return x.ErrorType
	}
	return ErrorType_None
}

func (x *TransferResponse) GetClusterState() string {
	if x != nil {
		return x.ClusterState
	}
	return ""
}

func (x *TransferResponse) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *TransferResponse) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

type PublishMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorType    ErrorType `protobuf:"varint,1,opt,name=errorType,proto3,enum=ErrorType" json:"errorType,omitempty"`
	ClusterState string    `protobuf:"bytes,2,opt,name=clusterState,proto3" json:"clusterState,omitempty"`
	LeaderId     string    `protobuf:"bytes,3,opt,name=leaderId,proto3" json:"leaderId,omitempty"`
	Term         uint64    `protobuf:"varint,4,opt,name=term,proto3" json:"term,omitempty"`
}

func (x *PublishMetadataResponse) Reset() {
	*x = PublishMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishMetadataResponse) ProtoMessage() {}

func (x *PublishMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishMetadataResponse.ProtoReflect.Descriptor instead.
func (*PublishMetadataResponse) Descriptor() ([]byte, []int) {
	return file_cluster_service_proto_rawDescGZIP(), []int{7}
}

func (x *PublishMetadataResponse) GetErrorType() ErrorType {
	if x != nil {
		return x.ErrorType
	}
	return ErrorType_None
}

func (x *PublishMetadataResponse) GetClusterState() string {
	if x != nil {
		return x.ClusterState
	}
	return ""
}

func (x *PublishMetadataResponse) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *PublishMetadataResponse) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

type JoinClusterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId                string `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	NodeAddr              string `protobuf:"bytes,2,opt,name=nodeAddr,proto3" json:"nodeAddr,omitempty"`
	AutoJoinClusterEnable bool   `protobuf:"varint,3,opt,name=autoJoinClusterEnable,proto3" json:"autoJoinClusterEnable,omitempty"`
	IsCandidate           bool   `protobuf:"varint,4,opt,name=isCandidate,proto3" json:"isCandidate,omitempty"`
}

func (x *JoinClusterRequest) Reset() {
	*x = JoinClusterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinClusterRequest) ProtoMessage() {}

func (x *JoinClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinClusterRequest.ProtoReflect.Descriptor instead.
func (*JoinClusterRequest) Descriptor() ([]byte, []int) {
	return file_cluster_service_proto_rawDescGZIP(), []int{8}
}

func (x *JoinClusterRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *JoinClusterRequest) GetNodeAddr() string {
	if x != nil {
		return x.NodeAddr
	}
	return ""
}

func (x *JoinClusterRequest) GetAutoJoinClusterEnable() bool {
	if x != nil {
		return x.AutoJoinClusterEnable
	}
	return false
}

func (x *JoinClusterRequest) GetIsCandidate() bool {
	if x != nil {
		return x.IsCandidate
	}
	return false
}

// Bring the current node information
type NodeInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId                string `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	NodeIp                string `protobuf:"bytes,2,opt,name=nodeIp,proto3" json:"nodeIp,omitempty"`
	InternalPort          uint32 `protobuf:"varint,3,opt,name=internalPort,proto3" json:"internalPort,omitempty"`
	IsCandidate           bool   `protobuf:"varint,4,opt,name=isCandidate,proto3" json:"isCandidate,omitempty"`
	AutoJoinClusterEnable bool   `protobuf:"varint,5,opt,name=autoJoinClusterEnable,proto3" json:"autoJoinClusterEnable,omitempty"`
	ExternalTcpPort       uint32 `protobuf:"varint,6,opt,name=ExternalTcpPort,proto3" json:"ExternalTcpPort,omitempty"`
	ExternalHttpPort      uint32 `protobuf:"varint,7,opt,name=ExternalHttpPort,proto3" json:"ExternalHttpPort,omitempty"`
}

func (x *NodeInfoRequest) Reset() {
	*x = NodeInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfoRequest) ProtoMessage() {}

func (x *NodeInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfoRequest.ProtoReflect.Descriptor instead.
func (*NodeInfoRequest) Descriptor() ([]byte, []int) {
	return file_cluster_service_proto_rawDescGZIP(), []int{9}
}

func (x *NodeInfoRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeInfoRequest) GetNodeIp() string {
	if x != nil {
		return x.NodeIp
	}
	return ""
}

func (x *NodeInfoRequest) GetInternalPort() uint32 {
	if x != nil {
		return x.InternalPort
	}
	return 0
}

func (x *NodeInfoRequest) GetIsCandidate() bool {
	if x != nil {
		return x.IsCandidate
	}
	return false
}

func (x *NodeInfoRequest) GetAutoJoinClusterEnable() bool {
	if x != nil {
		return x.AutoJoinClusterEnable
	}
	return false
}

func (x *NodeInfoRequest) GetExternalTcpPort() uint32 {
	if x != nil {
		return x.ExternalTcpPort
	}
	return 0
}

func (x *NodeInfoRequest) GetExternalHttpPort() uint32 {
	if x != nil {
		return x.ExternalHttpPort
	}
	return 0
}

// Reply to the current node information
type NodeInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId                string       `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	NodeIp                string       `protobuf:"bytes,2,opt,name=nodeIp,proto3" json:"nodeIp,omitempty"`
	InternalPort          uint64       `protobuf:"varint,3,opt,name=internalPort,proto3" json:"internalPort,omitempty"`
	IsCandidate           bool         `protobuf:"varint,4,opt,name=isCandidate,proto3" json:"isCandidate,omitempty"`
	AutoJoinClusterEnable bool         `protobuf:"varint,5,opt,name=autoJoinClusterEnable,proto3" json:"autoJoinClusterEnable,omitempty"`
	StartupMode           StartupMode  `protobuf:"varint,6,opt,name=startupMode,proto3,enum=StartupMode" json:"startupMode,omitempty"`
	ExternalTcpPort       uint32       `protobuf:"varint,7,opt,name=ExternalTcpPort,proto3" json:"ExternalTcpPort,omitempty"`
	ExternalHttpPort      uint32       `protobuf:"varint,8,opt,name=ExternalHttpPort,proto3" json:"ExternalHttpPort,omitempty"`
	AppliedIndex          uint64       `protobuf:"varint,9,opt,name=appliedIndex,proto3" json:"appliedIndex,omitempty"`
	ClusterState          ClusterState `protobuf:"varint,10,opt,name=clusterState,proto3,enum=ClusterState" json:"clusterState,omitempty"`
	LeaderId              string       `protobuf:"bytes,11,opt,name=leaderId,proto3" json:"leaderId,omitempty"`
	LeaderAddr            string       `protobuf:"bytes,12,opt,name=leaderAddr,proto3" json:"leaderAddr,omitempty"`
	Term                  uint64       `protobuf:"varint,13,opt,name=term,proto3" json:"term,omitempty"`
}

func (x *NodeInfoResponse) Reset() {
	*x = NodeInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfoResponse) ProtoMessage() {}

func (x *NodeInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfoResponse.ProtoReflect.Descriptor instead.
func (*NodeInfoResponse) Descriptor() ([]byte, []int) {
	return file_cluster_service_proto_rawDescGZIP(), []int{10}
}

func (x *NodeInfoResponse) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeInfoResponse) GetNodeIp() string {
	if x != nil {
		return x.NodeIp
	}
	return ""
}

func (x *NodeInfoResponse) GetInternalPort() uint64 {
	if x != nil {
		return x.InternalPort
	}
	return 0
}

func (x *NodeInfoResponse) GetIsCandidate() bool {
	if x != nil {
		return x.IsCandidate
	}
	return false
}

func (x *NodeInfoResponse) GetAutoJoinClusterEnable() bool {
	if x != nil {
		return x.AutoJoinClusterEnable
	}
	return false
}

func (x *NodeInfoResponse) GetStartupMode() StartupMode {
	if x != nil {
		return x.StartupMode
	}
	return StartupMode_StandAlone
}

func (x *NodeInfoResponse) GetExternalTcpPort() uint32 {
	if x != nil {
		return x.ExternalTcpPort
	}
	return 0
}

func (x *NodeInfoResponse) GetExternalHttpPort() uint32 {
	if x != nil {
		return x.ExternalHttpPort
	}
	return 0
}

func (x *NodeInfoResponse) GetAppliedIndex() uint64 {
	if x != nil {
		return x.AppliedIndex
	}
	return 0
}

func (x *NodeInfoResponse) GetClusterState() ClusterState {
	if x != nil {
		return x.ClusterState
	}
	return ClusterState_NONE_STATE
}

func (x *NodeInfoResponse) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *NodeInfoResponse) GetLeaderAddr() string {
	if x != nil {
		return x.LeaderAddr
	}
	return ""
}

func (x *NodeInfoResponse) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

var File_cluster_service_proto protoreflect.FileDescriptor

var file_cluster_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa6, 0x01, 0x0a, 0x12, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x43, 0x6c, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0a, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22,
	0xcd, 0x01, 0x0a, 0x11, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6c, 0x69, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74,
	0x65, 0x72, 0x6d, 0x12, 0x2e, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x22,
	0x45, 0x0a, 0x13, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x22, 0xc8, 0x01, 0x0a, 0x14, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x28, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x22, 0x64, 0x0a, 0x16, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x22, 0x7e, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x27,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0a, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x22, 0x97, 0x01, 0x0a, 0x17, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x74, 0x65, 0x72, 0x6d, 0x22, 0xa0, 0x01, 0x0a, 0x12, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x34, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15,
	0x61, 0x75, 0x74, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x43, 0x61, 0x6e, 0x64, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x61,
	0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x22, 0x93, 0x02, 0x0a, 0x0f, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x69, 0x73, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x34, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x15, 0x61, 0x75, 0x74, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x54, 0x63, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x63, 0x70, 0x50, 0x6f, 0x72,
	0x74, 0x12, 0x2a, 0x0a, 0x10, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x48, 0x74, 0x74,
	0x70, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x48, 0x74, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x22, 0xeb, 0x03,
	0x0a, 0x10, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x6f,
	0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x43, 0x61, 0x6e, 0x64,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43,
	0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x6f,
	0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x61, 0x75, 0x74, 0x6f, 0x4a, 0x6f, 0x69,
	0x6e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2e,
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x63, 0x70, 0x50, 0x6f, 0x72,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x54, 0x63, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x48, 0x74, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x48, 0x74, 0x74, 0x70,
	0x50, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x31, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d,
	0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x2a, 0x32, 0x0a, 0x0e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x11, 0x0a,
	0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x01, 0x2a,
	0x2a, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0e,
	0x0a, 0x0a, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x41, 0x6c, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x10, 0x01, 0x2a, 0x61, 0x0a, 0x0b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x46, 0x65, 0x74, 0x63, 0x68, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x10, 0x04, 0x2a, 0x84,
	0x01, 0x0a, 0x0c, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x0e, 0x0a, 0x0a, 0x4e, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12,
	0x10, 0x0a, 0x0c, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x49, 0x4e, 0x47, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x12, 0x11, 0x0a,
	0x0d, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03,
	0x12, 0x08, 0x0a, 0x04, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54,
	0x41, 0x4e, 0x44, 0x42, 0x59, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x41, 0x49, 0x4e, 0x54,
	0x45, 0x4e, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x07, 0x32, 0xda, 0x03, 0x0a, 0x0e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a,
	0x0a, 0x19, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x4a, 0x6f,
	0x69, 0x6e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0b, 0x4a, 0x6f,
	0x69, 0x6e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x13, 0x2e, 0x4a, 0x6f, 0x69, 0x6e,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x10,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x11, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x14, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x41, 0x0a, 0x14, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x2e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x43, 0x6c, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6c, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cluster_service_proto_rawDescOnce sync.Once
	file_cluster_service_proto_rawDescData = file_cluster_service_proto_rawDesc
)

func file_cluster_service_proto_rawDescGZIP() []byte {
	file_cluster_service_proto_rawDescOnce.Do(func() {
		file_cluster_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_cluster_service_proto_rawDescData)
	})
	return file_cluster_service_proto_rawDescData
}

var file_cluster_service_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_cluster_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_cluster_service_proto_goTypes = []interface{}{
	(TransferStatus)(0),             // 0: TransferStatus
	(StartupMode)(0),                // 1: StartupMode
	(RequestType)(0),                // 2: RequestType
	(ClusterState)(0),               // 3: ClusterState
	(*ForwardCliResponse)(nil),      // 4: ForwardCliResponse
	(*ForwardCliRequest)(nil),       // 5: ForwardCliRequest
	(*FollowerInfoRequest)(nil),     // 6: FollowerInfoRequest
	(*FollowerInfoResponse)(nil),    // 7: FollowerInfoResponse
	(*PublishMetadataRequest)(nil),  // 8: PublishMetadataRequest
	(*TransferRequest)(nil),         // 9: TransferRequest
	(*TransferResponse)(nil),        // 10: TransferResponse
	(*PublishMetadataResponse)(nil), // 11: PublishMetadataResponse
	(*JoinClusterRequest)(nil),      // 12: JoinClusterRequest
	(*NodeInfoRequest)(nil),         // 13: NodeInfoRequest
	(*NodeInfoResponse)(nil),        // 14: NodeInfoResponse
	(ErrorType)(0),                  // 15: ErrorType
	(*empty.Empty)(nil),             // 16: google.protobuf.Empty
}
var file_cluster_service_proto_depIdxs = []int32{
	15, // 0: ForwardCliResponse.errorType:type_name -> ErrorType
	2,  // 1: ForwardCliRequest.requestType:type_name -> RequestType
	15, // 2: FollowerInfoResponse.errorType:type_name -> ErrorType
	0,  // 3: TransferRequest.status:type_name -> TransferStatus
	15, // 4: TransferResponse.errorType:type_name -> ErrorType
	15, // 5: PublishMetadataResponse.errorType:type_name -> ErrorType
	1,  // 6: NodeInfoResponse.startupMode:type_name -> StartupMode
	3,  // 7: NodeInfoResponse.clusterState:type_name -> ClusterState
	13, // 8: ClusterService.GetNodeInfo:input_type -> NodeInfoRequest
	12, // 9: ClusterService.ForwardJoinClusterRequest:input_type -> JoinClusterRequest
	12, // 10: ClusterService.JoinCluster:input_type -> JoinClusterRequest
	9,  // 11: ClusterService.TransferLeadership:input_type -> TransferRequest
	8,  // 12: ClusterService.PublishMetadata:input_type -> PublishMetadataRequest
	6,  // 13: ClusterService.GetFollowerInfo:input_type -> FollowerInfoRequest
	5,  // 14: ClusterService.ForwardClientRequest:input_type -> ForwardCliRequest
	14, // 15: ClusterService.GetNodeInfo:output_type -> NodeInfoResponse
	16, // 16: ClusterService.ForwardJoinClusterRequest:output_type -> google.protobuf.Empty
	16, // 17: ClusterService.JoinCluster:output_type -> google.protobuf.Empty
	10, // 18: ClusterService.TransferLeadership:output_type -> TransferResponse
	11, // 19: ClusterService.PublishMetadata:output_type -> PublishMetadataResponse
	7,  // 20: ClusterService.GetFollowerInfo:output_type -> FollowerInfoResponse
	4,  // 21: ClusterService.ForwardClientRequest:output_type -> ForwardCliResponse
	15, // [15:22] is the sub-list for method output_type
	8,  // [8:15] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_cluster_service_proto_init() }
func file_cluster_service_proto_init() {
	if File_cluster_service_proto != nil {
		return
	}
	file_error_type_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cluster_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForwardCliResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForwardCliRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowerInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowerInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinClusterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cluster_service_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cluster_service_proto_goTypes,
		DependencyIndexes: file_cluster_service_proto_depIdxs,
		EnumInfos:         file_cluster_service_proto_enumTypes,
		MessageInfos:      file_cluster_service_proto_msgTypes,
	}.Build()
	File_cluster_service_proto = out.File
	file_cluster_service_proto_rawDesc = nil
	file_cluster_service_proto_goTypes = nil
	file_cluster_service_proto_depIdxs = nil
}
